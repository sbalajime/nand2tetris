// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/PC.hdl
/**
 * A 16-bit counter.
 * if      reset(t): out(t+1) = 0
 * else if load(t):  out(t+1) = in(t)
 * else if inc(t):   out(t+1) = out(t) + 1
 * else              out(t+1) = out(t)
 */
CHIP PC {
    IN in[16],inc, load, reset;
    OUT out[16];
    
    PARTS:
    Inc16(in = rOut, out = incOut);
    Mux16(a = incOut, b = in, sel = load, out = rs1);  // should increment even if load is 0. Shouldn't increment if load is 1.
    Mux16(a = rs1, b = false, sel = reset, out = rs2); // Should reset to 0 even if load is 1.
    Or(a = load, b = inc, out = or1out);
    Or(a = or1out, b = reset, out = or2out);
    Register(in = rs2, load = or2out,  out = rOut, out = out); // Register should load value if any of the three control bit is 1.
}
